-- Run the SpringBootApplication - l1exercise

-- Application will run on port 8080

-- After this you can access DB from following URL http://localhost:8080/h2-console

-- In the below login page, in JDBC URL input, enter value below and click connect

    JDBC URL:     jdbc:h2:mem:userDB



-- REST URLs:

http://localhost:8080/hello
Returns - Hello World

http://localhost:8080/getText/This is new a Text message
Returns - This is a new Text message

http://localhost:8080/message
Returns - Entered text, after clicking on Submit button

http://localhost:8080/user
Returns - Save user in H2 DB and returns the entered row values



Exercise Description - 

Step 1: Hello world wide web
Create a ‘hello world’ web page that runs on a local application server.
Step 2: Build the back-end
Create a REST web service with a method that returns the text that is passed to it.
Step 3: Connect your front and back ends
Create a web form that has a text box, and a ‘Done’ button. When ‘Done’ is clicked make AJAX call, passing the entered text to the web service you created in the previous step. Display the response from the web service call below the text box on the form.
Extend your tests to verify new components.
Step 4: Bring in the database
Extend your web service to add a method to store text passed from the form into the database using design patterns where appropriate. In addition to saving the text, store the date and time when the data was saved.
Step 5: Include the user info
Extend the form to capture the user name and a list of all the submissions by user. Add another method to the service to return all text submissions and display them at the bottom of the page.
Step 6: Replying to text
Extend your solution from previous challenge to allow “responding” to already posted texts and display responses, indented, below the related text entry.

